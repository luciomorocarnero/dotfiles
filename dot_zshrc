# Enable Powerlevel10k instant prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# ====== Environment Setup ======
# Configuración estándar de directorios XDG
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"

# ====== PATH Configurations ======
typeset -U path  # Evita duplicados en PATH
path=(
    "$HOME/.local/bin"
    "$HOME/bin"
    "$HOME/my_scripts"
    "$HOME/go/bin"
    "/opt/nvim-linux-x86_64/bin"
    "/usr/local/go/bin"
    "$JAVA_HOME/bin"
    "$ANDROID_HOME/emulator"
    "$ANDROID_HOME/platform-tools"
    $path
)

# Configuraciones específicas de directorios
export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"
export ANDROID_HOME="$HOME/Android/Sdk"

# ====== Environment Variables ======
export EDITOR='nvim'
export VISUAL='nvim'
export RANGER_LOAD_DEFAULT_RC="FALSE"
export RANGER_DEVICONS_SEPARATOR="  "
export TERM="xterm-kitty"
export DEVPOD_CONTAINER_RUNTIME="bin/podman"
export YAZI_CONFIG_HOME="$XDG_CONFIG_HOME/yazi"

# ====== Oh My Zsh Configuration ======
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
ZOXIDE_CMD_OVERRIDE="cd"
ENABLE_CORRECTION="true"

# Plugins (optimizados para rendimiento)
plugins=(
    zsh-syntax-highlighting
    zoxide
    fzf
    zsh-autosuggestions
)

# Carga diferida para mejorar rendimiento
zstyle ':omz:update' mode reminder
zstyle ':omz:plugins:nvm' lazy yes

# ====== Aliases ======
alias ls='exa -al --group-directories-first --icons'
alias lsg='exa -al --group-directories-first --icons | grep'
alias python='python3'
alias vim='nvim'
alias rgr='ranger'
alias off='poweroff'
alias gitclone="git clone --depth=1"
alias gpgenc='/home/lucio/my_scripts/encrypt_and_cleanup.sh'
alias gpgdec='/home/lucio/my_scripts/decrypt_and_cleanup.sh'
alias games='~/my_scripts/choose_game.sh'
alias vpnjst='sudo openfortivpn -c ~/JST'
alias dotfiles='/usr/bin/git --git-dir=/home/lucio/.dotfiles/ --work-tree=/home/lucio'
alias update='sudo apt update && sudo apt upgrade -y'

# ====== Performance Optimizations ======
# Limitar autocompletar a comandos usados recientemente
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# Configuración de historial
HISTSIZE=100000
HISTFILESIZE=200000
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE

# ====== Load Core Components ======
source $ZSH/oh-my-zsh.sh

# ====== Load External Tools ======
# Carga optimizada de NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Cargo (Rust)
[ -f "$HOME/.cargo/env" ] && source "$HOME/.cargo/env"

# # Zoxide initialization
eval "$(zoxide init zsh)"

# FZF configuration
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ====== Powerlevel10k Configuration ======
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# ====== Custom Functions ======
# Yazi file manager with directory changing
function y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp"

    if [ -f "$tmp" ]; then
        local cwd
        IFS= read -r cwd < "$tmp"
        [ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && cd -- "$cwd"
    fi

    rm -f -- "$tmp"
}

# Update system packages
function sysupdate() {
    sudo apt update
    sudo apt upgrade -y --allow-downgrades
    sudo apt autoremove -y
    sudo apt clean
}

# ====== Final Setup ======
# Comprobar y cargar variables de entorno
# [ -f ~/.env ] && source <(grep -v '^#' ~/.env | xargs -d '\n' export)

# Mostrar información del sistema al iniciar
# [ -x "$(command -v neofetch)" ] && neofetch --off
